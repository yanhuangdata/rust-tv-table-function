name: Publish releases to GitHub
on:
  push:
    tags:
      - v[0-9]+.*

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  create-release:
    if: github.repository_owner == 'yanhuangdata'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: taiki-e/create-gh-release-action@v1
        id: create-gh-release
        with:
          draft: true
          branch: main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      version: ${{ steps.create-gh-release.outputs.version }}

  build-binaries:
    name: Build binaries for ${{ matrix.target }}
    if: github.repository_owner == 'yanhuangdata'
    needs:
      - create-release
    strategy:
      matrix:
        include:
          # Native builds
          - target: aarch64-apple-darwin
            # macos-14 for M1 runners
            os: macos-14
            build-target: aarch64-apple-darwin

          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            build-target: x86_64-unknown-linux-gnu

          - target: aarch64-unknown-linux-gnu
            os: ubuntu-24.04-arm
            build-target: aarch64-unknown-linux-gnu

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dsherret/rust-toolchain-file@v1
      - name: Test
        run: |
          cargo build --release --target ${{ matrix.build-target }}

      - name: Build and package release
        run: |
          ./ci/scripts/pack-release.sh "${{ matrix.build-target }}" "rust_tvtf" "${{ needs.create-release.outputs.version }}"
          ./ci/scripts/pack-release.sh "${{ matrix.build-target }}" "rust_tvtf_example" "${{ needs.create-release.outputs.version }}"

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            cpp/zngur/extra_generated.h
            cpp/zngur/generated.h
            rust_tvtf-${{ needs.create-release.outputs.version }}-${{ matrix.build-target }}.tar.gz
            rust_tvtf-${{ needs.create-release.outputs.version }}-${{ matrix.build-target }}.tar.gz.sha256
          draft: true
          tag_name: ${{ needs.create-release.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
