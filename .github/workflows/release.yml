name: Publish releases to GitHub
on:
  push:
    tags:
      - v[0-9]+.*

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  create-release:
    if: github.repository_owner == 'yanhuangdata'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: taiki-e/create-gh-release-action@v1
        id: create-gh-release
        with:
          draft: true
          branch: main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      version: ${{ steps.create-gh-release.outputs.version }}

  build-binaries:
    name: Build binaries for ${{ matrix.target }}
    if: github.repository_owner == 'yanhuangdata'
    needs:
      - create-release
    strategy:
      matrix:
        include:
          # Native builds
          - target: universal-apple-darwin
            # macos-14 for M1 runners
            os: macos-14
            build-target: universal-apple-darwin
            build-tool: cargo

          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            build-target: x86_64-unknown-linux-gnu
            build-tool: cargo

          - target: aarch64-unknown-linux-gnu
            os: ubuntu-24.04-arm
            build-target: aarch64-unknown-linux-gnu
            build-tool: cargo

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - uses: taiki-e/upload-rust-binary-action@v1.26.0
        with:
          bin: rust-tvtf
          include: cpp/zngur/generated/generated.h,cpp/zngur/generated/extra_generated.h
          archive: $tag-$target
          build-tool: ${{ matrix.build-tool }}
          target: ${{ matrix.build-target }}
          tar: all
          checksum: sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set archive output variable
        id: archive-output
        shell: bash
        run: |
          echo "${{ matrix.target }}-tar=${{ github.ref_name }}-${{ matrix.target }}".tar.gz >> $GITHUB_OUTPUT

    outputs:
      x86_64-linux-tar: ${{ steps.archive-output.outputs.x86_64-unknown-linux-gnu-tar }}
      aarch64-linux-tar: ${{ steps.archive-output.outputs.aarch64-unknown-linux-gnu-tar }}
      mac-tar: ${{ steps.archive-output.outputs.universal-apple-darwin-tar }}
