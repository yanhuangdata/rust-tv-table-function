#!/usr/bin/env just --justfile

set dotenv-load := true

build_os := if os() == "macos" { "osx" } else { "linux" }
arch := if `uname -p` == "arm" { "arm64" } else { "x64" }
micro_arch := if `uname -p` == "arm" { "" } else { "-haswell" }
generator := env_var_or_default("CMAKE_GENERATOR", "Ninja")
vcpkg_default_triplet := env_var_or_default("VCPKG_DEFAULT_TRIPLET", arch + "-" + build_os + micro_arch)
default_build_type := env_var_or_default("BUILD_TYPE", "debug")
default_build_jobs := env_var_or_default("BUILD_JOBS", "12")
default_build_target := env_var_or_default("BUILD_TARGET", "all")
default_distcc_jobs := env_var_or_default("DISTCC_JOBS", "24")
default_profile_name := env_var_or_default("PROFILE_NAME", "")

# configure the project using cmake
cmake build_type=default_build_type profile_name=default_profile_name:
  PROFILE_NAME={{profile_name}} cmake . --preset={{build_type}}-{{build_os}} -DVCPKG_TARGET_TRIPLET={{vcpkg_default_triplet}}

# compile the project
build build_type=default_build_type jobs=default_build_jobs target=default_build_target profile_name=default_profile_name:
	PROFILE_NAME={{profile_name}} cmake --build --target {{target}} --preset={{build_type}}-{{build_os}}-build

# install the project
install build_type=default_build_type: 
	DESTDIR=./{{build_type}}-{{build_os}} cmake --build --target install --preset={{build_type}}-{{build_os}}-build 

# run all tests
test build_type=default_build_type:
  cd build-cmake-{{build_type}}-{{build_os}} && ctest --output-junit ./junit.xml && cd ..

clean:
  rm -fr target && rm -fr vcpkg_installed && rm -fr build-cmake-*